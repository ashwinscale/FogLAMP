#!/bin/bash
##############################################################################
#
# FogLAMP SOW Acceptance Criteria test
# Copyright (C) 2018 Dianomic Systems, Inc.
#
##############################################################################

##############################################################################
#
## This script is used to run SOW Acceptance Criteria tests related to
## 'Admin'
#
##############################################################################

# Global constants declaration
declare EXECUTION_ENV
declare SUITE_BASEDIR
declare TEST_BASEDIR
declare RESULT_DIR
declare TEST_NAME

declare FOGLAMP_SERVER
declare FOGLAMP_HTTPPort
declare FOGLAMP_SNAP_VERSION
declare FOGLAMP_SNAP_UPDATE_VERSION
declare FOGLAMP_NAME
declare FOGLAMP_SNAP
declare FOGLAMP_PORT
declare SENDING_PROCESS_DATA
declare SCHEDULE_ID_OMF_PLUGIN

declare PI_SERVER
declare PI_SERVER_PORT
declare OMF_PRODUCER_TOKEN
declare OMF_TYPE_ID

declare SNAPS_DIRECTORY

declare ASSET_CODE
declare RETRY_COUNT

declare FOGLAMP_ROOT
declare FOGLAMP_AVAHI_STRING
declare CMD_JQ
declare CMD_AVBROWSE
declare CMD_CURL


# Reads configuration setting
source ${SUITE_BASEDIR}/suite.cfg

if [[ "${EXECUTION_ENV}" == "userver" ]]; then

    echo ERROR : Test not implemented for the Ubuntu Server environment.
    exit 1
fi

#
## Temporary files, one will be overwritten every time the second one used only in append mode
#
tmp_file_overwrite="$RESULT_DIR/$TEST_NAME.4.temp"
tmp_file_append="$RESULT_DIR/$TEST_NAME.5.temp"


TEST_ID="${TEST_NAME:0:4}"
TEST_ASSET_CODE=${ASSET_CODE}_${TEST_ID}

# Injects data into FogLAMP
echo '[{"name":"'${TEST_ASSET_CODE}'","sensor_values":[{"name":"sensor","type":"number","min":10,"max":10,"precision":0}]}]' >   ${tmp_file_overwrite} 2>&1
$TEST_BASEDIR/bash/inject_fogbench_data.bash -t ${tmp_file_overwrite}                                                   >>  $RESULT_DIR/$TEST_NAME.1.temp 2>> ${RESULT_DIR}/$TEST_NAME.2.temp
grep '^Total Messages Transferred: ' $RESULT_DIR/$TEST_NAME.1.temp

# Executes a backup
if [[ "${EXECUTION_ENV}" == "ucore" ]]; then

    sudo classic << EOF                                                                                                 >> ${RESULT_DIR}/$TEST_NAME.1.temp 2>> ${RESULT_DIR}/$TEST_NAME.2.temp
    curl -s -X POST http://${FOGLAMP_SERVER}:${FOGLAMP_HTTPPort}/foglamp/backup                            > ${tmp_file_overwrite} 2>> ${RESULT_DIR}/$TEST_NAME.2.temp
EOF
    cat ${tmp_file_overwrite}
fi

# Retrieves the list of backups
if [[ "${EXECUTION_ENV}" == "ucore" ]]; then

    sudo classic << EOF                                                                                                 >> ${RESULT_DIR}/$TEST_NAME.1.temp 2>> ${RESULT_DIR}/$TEST_NAME.2.temp
    curl -s -X GET http://${FOGLAMP_SERVER}:${FOGLAMP_HTTPPort}/foglamp/backup                            >> ${tmp_file_append} 2>> ${RESULT_DIR}/$TEST_NAME.2.temp
EOF
    cat ${tmp_file_append}
fi

# FIXME:
$TEST_BASEDIR/bash/sleep.bash 120


# FIXME:
#  | jq '.uptime="xxx"'
# POST /foglamp/backup - run a new backup
# GET /foglamp/backup - return a list of all backups
# GET /foglamp/backup/{backup-id}